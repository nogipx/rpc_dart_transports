
–ê–±—Å–æ–ª—é—Ç–Ω–æ –≤–µ—Ä–Ω–æ! –û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ! 

**–£–Ω–∞—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã** –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:
- `register` - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
- `unregister` - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞  
- `joinGroup` / `leaveGroup` - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏
- `getStatus` - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞/—Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
- –≤–æ–∑–º–æ–∂–Ω–æ `route` –¥–ª—è —Ä–∞–∑–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)

**–î–≤—É–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∏–º–∏–Ω–≥** –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏:
- –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç bidirectional stream –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
- –ß–µ—Ä–µ–∑ –Ω–µ–≥–æ –∏–¥–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–±–º–µ–Ω `RoutingMessage`
- –†–æ—É—Ç–µ—Ä –ø—É—à–∏—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –∂–µ —Å—Ç—Ä–∏–º

–í–æ—Ç –∫–∞–∫ —ç—Ç–æ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å:

```dart
class RouterResponderContract extends RpcResponderContract {
  RouterResponderContract() : super('Router') {
    // –£–Ω–∞—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    addUnaryMethod<ClientRegistration, StatusMessage>(
      methodName: 'register',
      // ...
    );
    
    addUnaryMethod<GroupAction, StatusMessage>(
      methodName: 'joinGroup', 
      // ...
    );
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –¥–≤—É–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∏–º –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
    addBidirectionalMethod<RoutingMessage, RoutingMessage>(
      methodName: 'messageStream',
      handler: (incomingStream) {
        return _handleMessageStream(incomingStream);
      },
    );
  }
  
  Stream<RoutingMessage> _handleMessageStream(Stream<RoutingMessage> incoming) async* {
    await for (final message in incoming) {
      // –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await _routeMessage(message);
      
      // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –æ–±—Ä–∞—Ç–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
      if (message.type == RoutingType.DELIVERY_CONFIRMATION) {
        yield RoutingMessage.confirmation(message.id);
      }
    }
  }
}
```

**–°–µ—Ä–≤–µ—Ä–Ω—ã–π/–∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å—Ç—Ä–∏–º–∏–Ω–≥** –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ –Ω—É–∂–Ω—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ:
- ‚ùå Server stream - –º—ã –Ω–µ –¥–µ–ª–∞–µ–º "–æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å ‚Üí –ø–æ—Ç–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤"
- ‚ùå Client stream - –º—ã –Ω–µ –∞–∫–∫—É–º—É–ª–∏—Ä—É–µ–º "–ø–æ—Ç–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Üí –æ–¥–∏–Ω –æ—Ç–≤–µ—Ç"
- ‚úÖ Bidirectional - –∏–º–µ–Ω–Ω–æ —Ç–æ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è real-time —á–∞—Ç–∞/—Ä–æ—É—Ç–∏–Ω–≥–∞

–ü–æ–ª—É—á–∞–µ—Ç—Å—è –æ—á–µ–Ω—å —á–∏—Å—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ unary, –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ bidirectional! üéØ
