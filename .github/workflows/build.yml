name: Build RPC Dart Router

on:
  workflow_dispatch:
    inputs:
      version:
        description: '–í–µ—Ä—Å–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: v1.0.0)'
        required: true
        default: 'v1.0.0'
        type: string
      create_release:
        description: '–°–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑ —Å —Å–æ–±—Ä–∞–Ω–Ω—ã–º–∏ –±–∏–Ω–∞—Ä—è–º–∏'
        required: true
        default: true
        type: boolean
      platforms:
        description: '–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è —Å–±–æ—Ä–∫–∏'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - linux-only
        - macos-only
        - windows-only

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    if: inputs.platforms == 'all' || inputs.platforms == 'linux-only'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Create build directory
      run: mkdir -p build
      working-directory: rpc_dart_transports
    
    - name: Get dependencies
      run: dart pub get
      working-directory: rpc_dart_transports
    
    - name: Build executable
      run: dart compile exe bin/rpc_dart_router.dart -o build/rpc_dart_router-linux
      working-directory: rpc_dart_transports
      
    - name: Test executable
      run: |
        chmod +x build/rpc_dart_router-linux
        ./build/rpc_dart_router-linux --version
      working-directory: rpc_dart_transports
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rpc_dart_router-linux
        path: rpc_dart_transports/build/rpc_dart_router-linux
        retention-days: 90

  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    if: inputs.platforms == 'all' || inputs.platforms == 'macos-only'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Create build directory
      run: mkdir -p build
      working-directory: rpc_dart_transports
    
    - name: Get dependencies
      run: dart pub get
      working-directory: rpc_dart_transports
    
    - name: Build executable
      run: dart compile exe bin/rpc_dart_router.dart -o build/rpc_dart_router-macos
      working-directory: rpc_dart_transports
      
    - name: Test executable
      run: |
        chmod +x build/rpc_dart_router-macos
        ./build/rpc_dart_router-macos --version
      working-directory: rpc_dart_transports
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rpc_dart_router-macos
        path: rpc_dart_transports/build/rpc_dart_router-macos
        retention-days: 90

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    if: inputs.platforms == 'all' || inputs.platforms == 'windows-only'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Create build directory
      run: mkdir -p build
      working-directory: rpc_dart_transports
      shell: bash
    
    - name: Get dependencies
      run: dart pub get
      working-directory: rpc_dart_transports
    
    - name: Build executable
      run: dart compile exe bin/rpc_dart_router.dart -o build/rpc_dart_router-windows.exe
      working-directory: rpc_dart_transports
      
    - name: Test executable
      run: |
        ./build/rpc_dart_router-windows.exe --version
      working-directory: rpc_dart_transports
      shell: bash
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rpc_dart_router-windows.exe
        path: rpc_dart_transports/build/rpc_dart_router-windows.exe
        retention-days: 90

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    if: inputs.create_release && !failure() && !cancelled()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        
    - name: Display structure
      run: |
        echo "üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:"
        find dist -type f -name "rpc_dart_router-*" -exec ls -lh {} \;
        
    - name: Prepare release files
      run: |
        mkdir -p release
        find dist -name "rpc_dart_router-*" -exec cp {} release/ \;
        ls -la release/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.version }}
        name: 'RPC Dart Router ${{ inputs.version }}'
        body: |
          üöÄ **RPC Dart Router ${{ inputs.version }}**
          
          CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ WebSocket —Ä–æ—É—Ç–µ—Ä–∞ RPC –≤—ã–∑–æ–≤–æ–≤.
          
          ## üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
          
          –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
          - **Linux**: `rpc_dart_router-linux`
          - **macOS**: `rpc_dart_router-macos` 
          - **Windows**: `rpc_dart_router-windows.exe`
          
          ## üöÄ –ó–∞–ø—É—Å–∫
          
          ```bash
          # Linux/macOS
          chmod +x rpc_dart_router-*
          ./rpc_dart_router-linux --help
          
          # Windows
          rpc_dart_router-windows.exe --help
          ```
          
          ## ‚öôÔ∏è –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
          
          ```bash
          # –ó–∞–ø—É—Å–∫ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          ./rpc_dart_router-linux
          
          # –ó–∞–ø—É—Å–∫ –Ω–∞ localhost:8080
          ./rpc_dart_router-linux -h localhost -p 8080
          
          # –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º
          ./rpc_dart_router-linux --quiet
          
          # Debug —Ä–µ–∂–∏–º
          ./rpc_dart_router-linux -v --log-level debug
          ```
          
          **–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å–±–æ—Ä–∫–∏:** ${{ inputs.platforms }}
          **–î–∞—Ç–∞ —Å–±–æ—Ä–∫–∏:** ${{ github.run_id }}
        files: release/*
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 